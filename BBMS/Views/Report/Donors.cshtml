@using BBMS.Models
@model List<dynamic>
@{
    ViewBag.Title = "Donors";
}

<h2 class="page-title">Registered Report</h2>

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <h4>Registered Donor Report</h4>
        <hr />
        <div class="form-group">
            @Html.Label("Donate Type", htmlAttributes: new { @class = "control-lable col-md-2" })
            <div class="col-md-10">
              <select name="DonateType" class="form-control">
                  <option value="">All</option>
                  <option value="V">Volunter</option>
                  <option value="P">Patient</option>
              </select>
            </div>

        </div>
        <div class="form-group">
            @Html.Label("From", htmlAttributes: new { @class = "control-lable col-md-2" })
            <div class="col-md-4">
                @Html.TextBox("DateFrom", null, new { @class = "form-control inline-icon", id = "datefrom" })
                <i class="glyphicon glyphicon-calendar shift-right"></i>
            </div>
            @Html.Label("To", htmlAttributes: new { @class = "control-lable col-md-1" })
            <div class="col-md-4">
                @Html.TextBox("DateTo", null, new { @class = "form-control inline-icon", id = "dateTo" })
                <i class="glyphicon glyphicon-calendar shift-right"></i>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Get Report" class="btn btn-default" />
            </div>
        </div>
    </div>   

    if (Model != null)
    {
        <div class="export-btn">
            <button type="button" class="btn btn-default" onclick="javascript:demoFromHTML();">
                <i class="glyphicon glyphicon-file"></i>
                Export
            </button>
        </div>
        <div id="Donors" style="width:100%">
            <img src="~/Content/logo.png" style="margin: 0px auto;display: block;" width="90" height="90" />

        <table class="table table-bordered" style="font-size:10pt">
            <tr>
                <th>Donar Name</th>
                <th>National Id</th>
                <th>Gender</th>
                <th>DOB</th>
                <th>Donate Type</th>
                <th>Telephone</th>
                <th>Patient Name</th>
                <th>Patient Relation</th>
                <th>Date</th>
            </tr>
            @{
                foreach (var item in Model)
                {
                    <tr>
                        <td>@item.First_Name @item.Last_Name</td>
                        <td>@item.National_ID</td>
                        <td>@item.Gender</td>
                        <td>@item.Date_of_Birth.ToShortDateString()</td>
                        <td>
                            @if (item.Donate_Type == "V")
                            {
                                <span>Volunteer</span>
                            }
                            else
                            {
                                <span>For Patient</span>
                            }
                        </td>
                        <td>@item.Telephone</td>
                        <td>
                            @if (item.Patiant_Name == null)
                            {
                                <span>N/A</span>
                            }
                            else
                            {
                                <span>@item.Patiant_Name</span>
                            }
                        </td>
                        <td>
                            @if (item.Patient_Relation_Name == null)
                            {
                                <span>N/A</span>
                            }
                            else
                            {
                                <span>@item.Patient_Relation_Name</span>
                            }
                        </td>
                        <td>@item.Date.ToShortDateString()</td>
                    </tr>
                }
            }
        </table>
    </div>
                }


                }
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jspdf.debug.js"></script>
<script type="text/javascript">

    $(function () {        
        $("#datefrom").datepicker({
            format: 'mm/dd/yyyy',
            autoclose: true          
        });
        $("#dateTo").datepicker({
            format: 'mm/dd/yyyy',
            autoclose:true
        });
    });
    function demoFromHTML() {
        var pdf = new jsPDF('l', 'pt', 'a3');
        pdf.text(155, 40, "Registered Donors Report");
        pdf.setFontSize(10);
        // source can be HTML-formatted string, or a reference
        // to an actual DOM element from which the text will be scraped.
        source = $('#Donors')[0];

        // we support special element handlers. Register them with jQuery-style 
        // ID selector for either ID or node name. ("#iAmID", "div", "span" etc.)
        // There is no support for any other type of selectors 
        // (class, of compound) at this time.
        specialElementHandlers = {
            // element with id of "bypass" - jQuery style selector
            '#bypassme': function (element, renderer) {
                // true = "handled elsewhere, bypass text extraction"
                return true
            }
        };
        margins = {
            top: 100,
            bottom: 30,
            left: 150,
            width: 1200
        };
        // all coords and widths are in jsPDF instance's declared units
        // 'inches' in this case
        pdf.fromHTML(
        source, // HTML string or DOM elem ref.
        margins.left, // x coord
        margins.top, { // y coord
            'width': margins.width, // max width of content on PDF
            'elementHandlers': specialElementHandlers
        },

        function (dispose) {
            // dispose: object with X, Y of the last line add to the PDF 
            //          this allow the insertion of new lines after html
            pdf.save('Donors_Report.pdf');
        }, margins);
    }
</script>

